<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        saHVhH+73mnM8FpZZgAAAABJRU5ErkJggg==
</value>
  </data>
</root>